---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import LogoLight from '~/components/common/LogoLight.astro';
import LogoDark from '~/components/common/LogoDark.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';
import BurgerMenu from '~/components/ui/BurgerMenu.astro';
import MobileNavigation from '~/components/ui/MobileNavigation.astro';
import MobileMenuController from '~/components/ui/MobileMenuController.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
  links?: Array<{
    text?: string;
    href?: string;
    ariaLabel?: string;
    icon?: string;
  }>;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<Link>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id,
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class="sticky top-0 z-50 bg-[#01407a] text-white shadow-sm transition-all duration-300"
  id="main-header"
>
  <div class="mx-auto flex items-center justify-between max-w-7xl px-8 py-3 gap-6">
    
    <!-- Logo -->
    <a href={getHomePermalink()} class="flex items-center flex-shrink-0">
      <div id="logo-container" class="relative">
        <div id="logo-light">
          <LogoLight />
        </div>
      </div>
    </a>

    <!-- Mobile Burger Menu -->
    <div class="flex items-center lg:hidden flex-shrink-0">
      <BurgerMenu />
    </div>

    <!-- Navigation Links -->
    <nav class="flex-1 flex justify-center overflow-hidden hidden lg:flex">
      <ul class="flex items-center gap-8 text-[1rem] tracking-wide font-medium whitespace-nowrap">
        {
          links.map(({ text, href, links: subLinks }) => (
            <li class={subLinks?.length ? 'relative group' : ''}>
              {subLinks?.length ? (
                <>
                  <button type="button" class="nav-link cursor-pointer">
                    {text}
                  </button>
                  <!-- Dropdown -->
                  <ul class="absolute left-0 mt-2 hidden group-hover:block bg-[#01407a] border border-[#cfb063]/30 rounded-md min-w-[200px] shadow-xl py-1 z-[1000]">
                    {subLinks.map(({ text: subText, href: subHref }) => (
                      <li>
                        <a href={subHref} class="dropdown-link">
                          {subText}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a href={href} class="nav-link">{text}</a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>

    <!-- CTA Button -->
    <div class="flex-shrink-0 hidden lg:block">
      {
        actions?.length ? (
          actions.map((btnProps) => (
            <a
              href={btnProps.href}
              class="bg-[#cfb063] text-[#01407a] px-6 py-2.5 rounded-full font-semibold hover:bg-[#d6ba66] transition-all duration-200 shadow-md hover:shadow-lg"
            >
              {btnProps.text}
            </a>
          ))
        ) : (
          ''
        )
      }
    </div>
  </div>

  <!-- Mobile Navigation -->
  <MobileNavigation links={links} actions={actions as any} />
</header>

<!-- Mobile Menu Controller -->
<MobileMenuController />

<style>
  .nav-link {
    @apply text-white/90 hover:text-[#cfb063] transition-colors duration-200 relative;
  }
  .nav-link::after {
    content: "";
    @apply absolute left-0 -bottom-1 w-0 h-[2px] bg-[#cfb063] transition-all duration-300;
  }
  .nav-link:hover::after {
    width: 100%;
  }

  .dropdown-link {
    @apply block px-5 py-2 text-white/90 hover:text-[#cfb063] hover:bg-white/5 transition-all duration-200;
  }

  header.scrolled {
    @apply bg-white text-[#01407a] shadow-md;
  }
  header.scrolled .nav-link {
    @apply text-[#01407a] hover:text-[#cfb063];
  }
  header.scrolled a.bg-[#cfb063] {
    @apply text-[#01407a] bg-[#cfb063];
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('main-header');
    window.addEventListener('scroll', () => {
      const scrolled = window.scrollY > 20;
      if (header) {
        header.classList.toggle('bg-white', scrolled);
        header.classList.toggle('shadow-md', scrolled);
      }
    });
  });
</script>
