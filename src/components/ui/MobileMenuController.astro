---
// TAKAI Mobile Menu Controller - Robust version for reliable mobile menu behavior
---

<script is:inline>
  const setupTakaiMobileMenu = () => {
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    if (!menuButton || !mobileMenu) return false;

    let isOpen = false;

    const open = () => {
      isOpen = true;
      mobileMenu.classList.remove('translate-x-full');
      mobileMenu.classList.add('translate-x-0');
      menuButton.classList.add('menu-open');
      menuButton.setAttribute('aria-expanded', 'true');
      document.body.style.overflow = 'hidden';
    };

    const close = () => {
      isOpen = false;
      mobileMenu.classList.remove('translate-x-0');
      mobileMenu.classList.add('translate-x-full');
      menuButton.classList.remove('menu-open');
      menuButton.setAttribute('aria-expanded', 'false');
      document.body.style.overflow = '';
    };

    const toggle = (e) => {
      e.preventDefault();
      e.stopPropagation();
      isOpen ? close() : open();
    };

    menuButton.addEventListener('click', toggle);
    document.addEventListener('keydown', (e) => e.key === 'Escape' && isOpen && close());
    document.addEventListener('click', (e) => {
      if (isOpen && !mobileMenu.contains(e.target) && !menuButton.contains(e.target)) close();
    });

    // Close when any nav link clicked
    mobileMenu.querySelectorAll('a').forEach(a => a.addEventListener('click', close));

    return true;
  };

  // Retry initialization to handle Astro rehydration and page swaps
  const initObserver = () => {
    if (!setupTakaiMobileMenu()) setTimeout(initObserver, 100);
  };
  document.addEventListener('astro:after-swap', initObserver);
  document.addEventListener('DOMContentLoaded', initObserver);
</script>
